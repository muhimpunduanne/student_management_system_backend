generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
}

enum StudentStatus {
  ACTIVE
  GRADUATED
  DROPPED
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  password         String
  firstName        String?
  lastName         String
  otpCode          String?
  otpExpiresAt     DateTime?
  isVerified       Boolean   @default(false)
  role             Role      @default(STUDENT)
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  student Student?
}

model Student {
  id             String        @id @default(uuid())
  userId         String        @unique
  phone          String
  profilePicture String
  enrollmentYear Int           @default(2025)
  status         StudentStatus @default(ACTIVE)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  courses StudentCourse[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id          String   @id @default(uuid())
  title       String
  code        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  students StudentCourse[]
}

model StudentCourse {
  id        String @id @default(uuid())
  studentId String
  courseId  String

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  course  Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@unique([studentId, courseId])
}
